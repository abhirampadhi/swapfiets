trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '8.x.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    inputs:
      command: 'restore'
      projects: '**/SF.BikeTheft.*.csproj'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'build'
      projects: '**/SF.BikeTheft.*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: DotNetCoreCLI@2
    inputs:
      command: 'publish'
      projects: 'src/WebAPI/SF.BikeTheft.WebApi.csproj'
      arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'

  - task: Docker@2
    inputs:
      containerRegistry: '<your-container-registry>'
      repository: 'sf-biketheft-webapi'
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'
      tags: |
        $(Build.BuildId)

  - task: Kubernetes@1
    inputs:
      connectionType: 'Kubernetes Service Connection'
      kubernetesServiceEndpoint: '<your-k8s-service-endpoint>'
      namespace: 'default'
      command: 'apply'
      useConfigurationFile: true
      configuration: 'deploy/helm/kubernetes-deploy.yaml'
